openapi: "3.0.0"
info:
  version: "1.0"
  title: OpenAPI 3.0 definition of Coderbot API v3

servers:
  - url: http://coderbot.local/api/v1
  
# Paths supported by the server application
paths:
  /settings:
    get:
      operationId: "api.loadSettings"
      summary: "Load settings"
      responses:
        200:
          description: "ok"
      tags:
        - CoderBot configuration
    put:
      operationId: "api.saveSettings"
      summary: "Save settings"
      requestBody:
        description: Save Settings
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Settings'
      responses:
        200:
          description: "ok"
      tags:
        - CoderBot configuration
  /settings/restore:
    post:
      operationId: "api.restoreSettings"
      summary: "Restore settings to default"
      responses:
        200:
          description: "ok"
      tags:
        - CoderBot configuration
  /media:
    get:
      operationId: "api.listPhotos"
      summary: "Get the list of all photos"
      tags:
        - Photos management
      responses:
        200:
          description: "ok"
    post:
      operationId: "api.takePhoto"
      summary: "take a new photo"
      tags:
        - Photos management
      responses:
        200:
          description: "ok"
  /media/{name}:
    get:
      operationId: "api.getPhoto"
      summary: "Get photo by name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 16
            pattern: '^(DSC|VID)+[0-9]+(_thumb)?\.?(jpg|mp4)?$'
      tags:
        - Photos management
      responses:
        200:
          description: Image in JPEG format
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
    put:
      operationId: "api.savePhoto"
      summary: "Save photo by name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 16
            pattern: '^(DSC|VID)+[0-9]+(_thumb)?\.?(jpg|mp4)?$'
      requestBody:
        description: Save Photo metadata
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Photo'
      tags:
        - Photos management
      responses:
        200:
          description: "ok"
    delete:
      operationId: "api.deletePhoto"
      summary: "Delete photo by name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 16
            pattern: '^(DSC|VID)+[0-9]+(_thumb)?\.?(jpg|mp4)?$'
      tags:
        - Photos management
      responses:
        200:
          description: "ok"
  /video/stream:
    get:
      operationId: "api.streamVideo"
      summary: "Stream video"
      tags:
        - Video management
      responses:
        200:
          description: "ok"
  /video/rec:
    post:
      operationId: "api.recVideo"
      summary: "Rec video"
      tags:
        - Video management
      responses:
        200:
          description: "ok"
  /video/stop:
    post:
      operationId: "api.stopVideo"
      summary: "Stop rec video"
      tags:
        - Video management
      responses:
        200:
          description: "ok"
  
  /programs:
    get:
      operationId: "api.listPrograms"
      summary: "Get the list of all the saved programs"
      tags:
        - Program management
      responses:
        200:
          description: "ok"

  /programs/{name}:
    get:
      operationId: "api.loadProgram"
      summary: "Get the program with the specified name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'

      tags:
        - Program management
      responses:
        200:
          description: "ok"
    delete:
      operationId: "api.deleteProgram"
      summary: "Delete a program"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      responses:
        200:
          description: "ok"
      tags:
        - Program management
    put:
      operationId: "api.saveProgram"
      summary: "Save an existing program"
      tags:
        - Program management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      requestBody:
        description: Program object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        200:
          description: "ok"
        400:
          description: "Failed to save the program"

  /programs/{name}/run:
    post:
      operationId: "api.runProgram"
      summary: "Execute the given program"
      tags:
        - Program management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      requestBody:
        description: Program object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Program'
      responses:
        200:
          description: "ok"

  /programs/{name}/status:
    get:
      operationId: "api.statusProgram"
      summary: "Get the status of the given program"
      tags:
        - Program management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      responses:
        200:
          description: "ok"

  /programs/{name}/stop:
    patch:
      operationId: "api.stopProgram"
      summary: "Stop the given program"
      tags:
        - Program management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      responses:
        200:
          description: "ok"

  /activities:
    get:
      operationId: "api.listActivities"
      summary: "Get the list of all the saved activities"
      tags:
        - Activity management
      responses:
        200:
          description: "ok"
    post:
      operationId: "api.saveAsNewActivity"
      summary: "Save a new activity"
      tags:
        - Activity management
      requestBody:
        description: Create new Activity
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      responses:
        200:
          description: "ok"
        400:
          description: "Failed to save the activity"
  /activities/{name}:
    get:
      operationId: "api.loadActivity"
      summary: "Get the activity with the specified name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
        - name: default
          in: query
          schema:
            type: string
          required: false
      tags:
        - Activity management
      responses:
        200:
          description: "ok"
    put:
      operationId: "api.saveActivity"
      summary: "Save the activity with the specified name"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      requestBody:
        description: Update Activity
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activity'
      tags:
        - Activity management
      responses:
        200:
          description: "ok"
    delete:
      operationId: "api.deleteActivity"
      summary: "Delete an activity"
      tags:
        - Activity management
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      responses:
        200:
          description: "ok"

  /music/packages:
    get:
      operationId: "api.listMusicPackages"
      summary: "List Music Packages"
      responses:
        200:
          description: "ok"
      tags:
        - Music extensions
    post:
      operationId: "api.addMusicPackage"
      summary: "Add Music Package"
      requestBody:
        description: Add a Music Package
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
      tags:
        - System operations
      responses:
        200:
          description: "ok"
        400:
          description: "upload failed"
  /music/packages/{name}:
    delete:
      operationId: "api.deleteMusicPackage"
      summary: "Delete Music Package"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      tags:
        - Music extensions
      responses:
        200:
          description: "ok"
        400:
          description: "not found"
       
  /system/status:
    get:
      operationId: "api.get_status"
      summary: "Bot general informations, execution status and reset log file"
      tags:
        - System operations
      responses:
        200:
          description: "Bot status"

  /system/test:
    post:
      summary: Tests CoderBot components.
      operationId: "api.testCoderbot"
      tags:
        - System operations
      requestBody:
        description: Performs onboard tests
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tests:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: Test ended.
        400:
          description: Invalid input.

  /system/info:
    get:
      operationId: "api.get_info"
      summary: "Bot general informations and execution status"
      tags:
        - System operations
      responses:
        200:
          description: "Bot status"

  /control/stop:
    post:
      operationId: "api.stop"
      summary: Stops the bot motors
      tags:
        - Direct control
      responses:
        200:
          description: "Successfully stopped the motors"

  /control/move:
    post:
      summary: Moves the bot forward or backward.
      operationId: "api.move"
      tags:
        - Direct control
      requestBody:
        description: Movement speed and duration or distance
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/MoveParamsElapse'
                - $ref: '#/components/schemas/MoveParamsDistance'
      responses:
        200:
          description: Sent command to the bot GPIO.
  /control/turn:
    post:
      summary: Make a turn with the motors
      operationId: "api.turn"
      tags:
        - Direct control
      requestBody:
        description: Movement Speed and duration or distance
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/TurnParamsElapse'
                - $ref: '#/components/schemas/TurnParamsDistance'
      responses:
        200:
          description: Sent command to the bot GPIO.
  /control/speak:
    post:
      operationId: "api.speak"
      summary: Pronounce a phrase
      tags:
        - Direct control
      requestBody:
        description: Movement Speed and duration
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  minLength: 1
                  maxLength: 256
                  pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
                  description: text to be "spoken"
                locale:
                  type: string
                  minLength: 1
                  maxLength: 2
                  pattern: '^[a-zA-Z]+$'
                  description: locale of text to be "spoken"
              required:
                - text
                - locale
      responses:
        200:
          description: "phrase received"
  /system/halt:
    post:
      operationId: "api.halt"
      summary: Halt system (system shutdown)
      tags:
        - System operations
      responses:
        200:
          description: "accepted"
  /system/reset:
    post:
      operationId: "api.reset"
      summary: Reset all local configuration to factory state
      tags:
        - System operations
      responses:
        200:
          description: ""
  /system/restart:
    post:
      operationId: "api.restart"
      summary: Restart backend
      tags:
        - System operations
      responses:
        200:
          description: "accepted"
  /system/reboot:
    post:
      operationId: "api.reboot"
      summary: Reboot all device
      tags:
        - System operations
      responses:
        200:
          description: "accepted"

  /cnnmodels:
    get:
      operationId: "api.listCNNModels"
      summary: "list of CNN Models"
      tags:
        - CNN Models
      responses:
        200:
          description: "CNN Models as JSON Object"
    post:
      operationId: "api.trainCNNModel"
      summary: "train new CNN Model"
      requestBody:
        description: CNN Model parameters
        required: true
        content:
          application/json:
            schema:
              type: object
      tags:
        - CNN Models
      responses:
        200:
          description: "CNN Models as JSON Object"
  /cnnmodels/{name}:
    get:
      operationId: "api.getCNNModel"
      summary: "get CNN Model"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      tags:
        - CNN Models
      responses:
        200:
          description: "CNN Model as JSON Object"
    delete:
      operationId: "api.deleteCNNModel"
      summary: "delete CNN Model"
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 128
            pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
      tags:
        - CNN Models
      responses:
        200:
          description: "CNN Model deleted"

components:
  schemas:
    MoveParamsElapse:
      type: object
      properties:
        speed:
          type: number
          minimum: -100.0
          maximum: 100.0
          description: 0 to 100 represent a forward movement (100 being the maximum speed), while 0 to -100 is a backward movement (-100 being the maximu speed)
        elapse:
          type: number
          minimum: -1.0
          maximum: 10.0
          description: Duration of the movement. 0 doesn't move the coderbot.
      required:
        - speed
        - elapse
    MoveParamsDistance:
      type: object
      properties:
        speed:
          type: number
          minimum: -100.0
          maximum: 100.0
          description: 0 to 100 represent a forward movement (100 being the maximum speed), while 0 to -100 is a backward movement (-100 being the maximu speed)
        distance:
          type: number
          minimum: 0.0
          maximum: 1000.0
          description: Target distqnce in mm.
      required:
        - speed
        - distance
    TurnParamsElapse:
      type: object
      properties:
        speed:
          type: number
          minimum: -100.0
          maximum: 100.0
          description: 0 to 100 represent a forward movement (100 being the maximum speed), while 0 to -100 is a backward movement (-100 being the maximu speed)
        elapse:
          type: number
          minimum: -1.0
          maximum: 1.0
          description: Duration of the movement. 0 doesn't move the coderbot.
      required:
        - speed
        - elapse
    TurnParamsDistance:
      type: object
      properties:
        speed:
          type: number
          minimum: -100.0
          maximum: 100.0
          description: 0 to 100 represent a forward movement (100 being the maximum speed), while 0 to -100 is a backward movement (-100 being the maximu speed)
        distance:
          type: number
          minimum: 0.0
          maximum: 100000.0
          description: Target distqnce in mm.
      required:
        - speed
        - distance
    Settings:
      type: object
    Photo:
      type: object
      properties:
        name:
          type: string
          pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
        tag:
          type: string
    Program:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
          pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
        code:
          type: string
          minLength: 1
        dom_code:
          type: string
        default:
          type: boolean
        overwrite:
          type: boolean
      required:
        - name
        - code

    Activity:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 128
          pattern: '^[a-zA-ZA-zÀ-ú0-9-_ ]+$'
        description:
          type: string
          minLength: 0
          maxLength: 256
        default:
          type: boolean
        stock:
          type: boolean
      required:
        - name
        - description
        - default
        - stock
    
