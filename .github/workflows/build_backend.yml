# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: build CoderBot backend

on:
  push:
    branches: [ master, develop, .* ]
  pull_request:
    branches: [ master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    container: coderbot/coderbot-ci:3.9-bullseye-arm
    steps:
    - uses: actions/checkout@v2 # Checking out the repo
    - run: pip install -r requirements.txt
    - run: |
        export PYTHONPATH=./coderbot:./stub:./test
        mkdir test-reports
        python3 -m unittest test/coderbot_test.py 2>&1 | tee test-reports/test_report.txt
        python3 -m unittest test/camera_test.py 2>&1 | tee test-reports/test_report.txt
        #python3 -m unittest test/cnn_test.py 2>&1 | tee test-reports/test_report.txt
        echo "test complete" 
    - run: |
        python3 coderbot/main.py &&
        sleep 30
        curl https://localhost:5000/api/v1/openapi.json
        st run --entry-point "^(?!.*(\/video\/stream)).*" https://localhost:5000/api/v1/openapi.json
        sleep 5
        pkill python3
        echo "openapi test complete"

  release-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2 # Checking out the repo
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
          push: true
          platforms: linux/arm/v7
          tags: ghcr.io/coderbotorg/containers/backend:latest
          context: backend
          #cache-from: type=registry,ref=ghcr.io/coderbotorg/containers/backend:latest
          #cache-to: type=inline
